#version 300 es
precision highp float;

#include "screen_size"

float half_width = 32.0;

vec2 vertices[4] = vec2[](
    vec2(-1.0, -1.0),
    vec2(-1.0, 1.0),
    vec2(1.0, -1.0),
    vec2(1.0, 1.0)
);

// TODO: in the future allow instanced drawing with layout locations generated by python code itself.
layout (location = 0) in vec4 in_attributes;


out vec3 v_texcoord;  // stores uv + the index of which texture2D to sample

void main() {
    vec2 pos = in_attributes.xy;
    float rotation = in_attributes.z;
    float texture = in_attributes.w;
    mat2 rot = mat2(cos(rotation), -sin(rotation), sin(rotation), cos(rotation));
    vec2 vertex = position + rot * vertices[gl_VertexID] * half_width;
    gl_Position = vec4(vertex / screen_size * 2.0 - 1.0, 0.0, 1.0);
    v_texcoord = vec3(vertices[gl_VertexID] * 0.5 + 0.5, texture);
}